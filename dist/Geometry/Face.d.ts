import { Point } from "./Point";
import { GeometryBase } from "./GeometryBase";
export declare class Face extends GeometryBase {
    static COLLISION_NONE: number;
    static COLLISION_INSIDE: number;
    static COLLISION_INSIDE_OTHER: number;
    static COLLISION_INTERSECTS: number;
    static COLLISION_TOUCHING: number;
    static COLLISION_POINT: number;
    _points: any;
    constructor(...points: any[]);
    setPoints(points: any): void;
    getLines(): any[];
    getPoints(): any;
    getLastPoint(): any;
    split(): any[];
    containsPoint(point: any, withTouching?: any): any;
    union(...others: any[]): any;
    setminus(...others: any[]): any[];
    intersection(...others: any[]): Face[];
    _getPointInside(): Point;
    checkCollision(otherFace: any): number;
    removeUnnecessaryPoints(): this;
    cutLines(lines: any): any[];
    cutLinesOutside(lines: any): any[];
    cutLinesWithin(lines: any): any[];
    static _glueLines(lines: any, notInFace?: any, inFace?: any): any[];
    static _removeInnerEdges(lines: any): any;
    static circle(center: any, radius: any, numPoints: any): Face;
    static rect(p1: any, p2: any): Face;
    static _getIntersections(lines1: any, lines2: any): {}[];
    static _getFacesWithIntersectionPoints(one: any, another: any): any[];
}
